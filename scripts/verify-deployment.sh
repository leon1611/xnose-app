#!/bin/bash

echo "üîç VERIFICACI√ìN DEL DESPLIEGUE EN RENDER"
echo "========================================"
echo ""

# URLs de los servicios
SERVICES=(
    "https://xnose-gateway.onrender.com/actuator/health"
    "https://xnose-auth-service.onrender.com/actuator/health"
    "https://xnose-owner-service.onrender.com/actuator/health"
    "https://xnose-pet-service.onrender.com/actuator/health"
    "https://xnose-alert-service.onrender.com/actuator/health"
    "https://xnose-ai-service.onrender.com/health"
    "https://xnose-frontend.onrender.com/health"
)

SERVICE_NAMES=(
    "Gateway Service"
    "Auth Service"
    "Owner Service"
    "Pet Service"
    "Alert Service"
    "AI Service"
    "Frontend"
)

# Funci√≥n para verificar un servicio
check_service() {
    local url=$1
    local name=$2
    
    echo "üîç Verificando $name..."
    
    # Intentar hacer la petici√≥n
    response=$(curl -s -o /dev/null -w "%{http_code}" "$url" --max-time 10)
    
    if [ "$response" = "200" ]; then
        echo "   ‚úÖ $name est√° funcionando (HTTP $response)"
        return 0
    else
        echo "   ‚ùå $name no responde correctamente (HTTP $response)"
        return 1
    fi
}

# Verificar todos los servicios
echo "üìã Verificando servicios..."
echo ""

failed_services=0

for i in "${!SERVICES[@]}"; do
    if ! check_service "${SERVICES[$i]}" "${SERVICE_NAMES[$i]}"; then
        ((failed_services++))
    fi
    echo ""
done

# Verificar conectividad entre servicios
echo "üîó Verificando conectividad entre servicios..."
echo ""

# Verificar que el Gateway puede comunicarse con otros servicios
echo "üîç Verificando comunicaci√≥n del Gateway..."
gateway_response=$(curl -s "https://xnose-gateway.onrender.com/actuator/health" --max-time 10)
if echo "$gateway_response" | grep -q "UP"; then
    echo "   ‚úÖ Gateway est√° funcionando correctamente"
else
    echo "   ‚ùå Gateway tiene problemas de conectividad"
    ((failed_services++))
fi

# Verificar base de datos
echo "üîç Verificando conectividad de base de datos..."
db_check=$(curl -s "https://xnose-gateway.onrender.com/actuator/health" --max-time 10)
if echo "$db_check" | grep -q "UP"; then
    echo "   ‚úÖ Base de datos est√° accesible"
else
    echo "   ‚ùå Problemas con la base de datos"
    ((failed_services++))
fi

echo ""
echo "üìä RESUMEN DE VERIFICACI√ìN"
echo "=========================="
echo ""

if [ $failed_services -eq 0 ]; then
    echo "üéâ ¬°TODOS LOS SERVICIOS EST√ÅN FUNCIONANDO!"
    echo ""
    echo "‚úÖ Despliegue exitoso"
    echo "‚úÖ Todos los servicios responden correctamente"
    echo "‚úÖ Base de datos conectada"
    echo "‚úÖ Comunicaci√≥n entre servicios establecida"
    echo ""
    echo "üåê URLs de acceso:"
    echo "   Frontend: https://xnose-frontend.onrender.com"
    echo "   API Gateway: https://xnose-gateway.onrender.com"
    echo ""
    echo "üöÄ El sistema est√° listo para usar"
else
    echo "‚ö†Ô∏è HAY PROBLEMAS CON $failed_services SERVICIO(S)"
    echo ""
    echo "üîß Pasos para solucionar:"
    echo "   1. Verifica los logs en Render Dashboard"
    echo "   2. Revisa las variables de entorno"
    echo "   3. Verifica la conectividad de la base de datos"
    echo "   4. Revisa las credenciales de Google Cloud"
    echo ""
    echo "üìã Para ver logs espec√≠ficos:"
    echo "   - Ve a Render Dashboard"
    echo "   - Selecciona el servicio con problemas"
    echo "   - Revisa la pesta√±a 'Logs'"
fi

echo ""
echo "üìû Para soporte adicional:"
echo "   - Revisa la documentaci√≥n en README.md"
echo "   - Verifica los logs en Render"
echo "   - Consulta el manual de usuario" 