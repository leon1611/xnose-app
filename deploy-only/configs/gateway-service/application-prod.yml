server:
  port: 8080
  address: 0.0.0.0

spring:
  application:
    name: gateway-service
  
  cloud:
    gateway:
      routes:
        # Auth Service
        - id: auth-service
          uri: ${AUTH_SERVICE_URL:http://localhost:8081}
          predicates:
            - Path=/auth/**
        
        # Owner Service
        - id: owner-service
          uri: ${OWNER_SERVICE_URL:http://localhost:8082}
          predicates:
            - Path=/owners/**
        
        # Pet Service
        - id: pet-service
          uri: ${PET_SERVICE_URL:http://localhost:8083}
          predicates:
            - Path=/pets/**
        
        # Alert Service
        - id: alert-service
          uri: ${ALERT_SERVICE_URL:http://localhost:8084}
          predicates:
            - Path=/alerts/**
        
        # AI Service
        - id: ai-service
          uri: ${AI_SERVICE_URL:http://localhost:8000}
          predicates:
            - Path=/ai/**
      
      # Configuración CORS para producción
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOriginPatterns: 
              - "https://*.onrender.com"
              - "https://*.vercel.app"
              - "http://localhost:19000"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true

# Configuración de timeouts para producción
httpclient:
  connect-timeout: 10000
  response-timeout: 60s

# Actuator para health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

# Logging para producción
logging:
  level:
    org.springframework.cloud.gateway: INFO
    com.petnow.gateway: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n" 